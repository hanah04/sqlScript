
declare @tmpTable table (CMTransId int)

declare @FK_TRXNO bigint,
		@dif decimal(20,4)

declare @PK_faArledgers int,
		@credit decimal(20,4),
		@FK_TRXNO_CM bigint,
		@FK_TRXNO_CR bigint,
		@CMTransId int,
		@memoTransAmt decimal(20,4)

declare @sql nvarchar(max)
		


declare a cursor for
					select 
							a.FK_TRXNO, 
							dif = sum(b.credit) - a.debit
					from
							faArledgers as a
							inner join faArledgers as b on a.FK_TRXNO = b.FK_TRXNO
															and b.doctype in ('CM', 'OR') 
															and b.cancelflag = 0 and  b.deleteflag = 0
					where 
							a.doctype not in ('CM', 'OR') 
							and a.cancelflag = 0 and a.deleteflag = 0
					group by
							a.FK_TRXNO, 
							a.debit
					having
							a.debit < sum(b.credit)
					order by
							a.FK_TRXNO

open a

	Fetch next from a into @FK_TRXNO, @dif
	While(@@FETCH_STATUS = 0)
	Begin
		--Iterate on every CM applied
		declare b cursor for 
							select 
									a.PK_faArledgers, a.credit, a.FK_TRXNO_CM, isnull(b.FK_TRXNO,0)
							from 
									faArledgers as a 
									left outer join faCROthers as b on a.FK_TRXNO_CM = b.FK_TRXNO_faDMCMPayer
							where
									a.FK_TRXNO = @FK_TRXNO 
									and a.doctype  = 'CM' 
									and a.cancelflag = 0 and a.deleteflag = 0
							order by 
									a.PK_faArledgers desc
		open b
		 
		 Fetch next from b into @PK_faArledgers, @credit, @FK_TRXNO_CM, @FK_TRXNO_CR
		 While (@@FETCH_STATUS = 0 and @dif > 0)
			Begin

			set @sql = ''
			set @CMTransId = 0
			set @memoTransAmt = 0

			select top 1 @CMTransId = PK_faDMCMPayerTrans, @memoTransAmt = memoamount from faDMCMPayerTrans where FK_TRXNO = @FK_TRXNO_CM and (round(memoamount,2) = @credit or memoamount = @credit)
							and PK_faDMCMPayerTrans not in (select CMTransId from @tmpTable)
		    
			set nocount on begin insert into @tmpTable values (@CMTransId) end set nocount off

			--select @PK_faArledgers, @FK_TRXNO, @FK_TRXNO_CM,@dif, @credit, @CMTransId, @memoTransAmt
 
			if (@dif >= @memoTransAmt)
			Begin
				set @sql = '
					update faArledgers set credit = 0 where PK_faArledgers = ' + Convert(varchar(20), @PK_faArledgers) + ' --for adjustment = ' + Convert(varchar(20), @memoTransAmt) + '
					update faDMCMPayerTrans set memoamount = 0 where PK_faDMCMPayerTrans = ' + Convert(varchar(20), @CMTransId) + '
					update faDMCMPayer set amount = amount - ' + Convert(varchar(20), @memoTransAmt) + ' where PK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CM)
					
				if (@FK_TRXNO_CR > 0)
				Begin
					set @sql = @sql	+ '
					update faCROthers set amount = amount - ' + Convert(varchar(20), @memoTransAmt) + ' where FK_TRXNO_faDMCMPayer = ' + Convert(varchar(20), @FK_TRXNO_CM) + ' and FK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CR) + '
					update faCRMstr set otheramount = otheramount - ' + Convert(varchar(20), @memoTransAmt) + ', appliedamount = appliedamount - ' + Convert(varchar(20), @memoTransAmt) + ' where PK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CR)
				End
				set @dif = @dif - @memoTransAmt
			End
			Else
			Begin
				set @sql = '
					update faArledgers set credit = credit - ' + Convert(varchar(20), @dif) + ' where PK_faArledgers = ' + Convert(varchar(20), @PK_faArledgers) + ' --for adjustment = ' + Convert(varchar(20), @dif) + '
					update faDMCMPayerTrans set memoamount = memoamount - ' + Convert(varchar(20), @dif) + ' where PK_faDMCMPayerTrans = ' + Convert(varchar(20), @CMTransId) + '
					update faDMCMPayer set amount = amount - ' + Convert(varchar(20), @dif) + ' where PK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CM)
				if (@FK_TRXNO_CR > 0)
				Begin
				set @sql = @sql	+ '	
					update faCROthers set amount = amount - ' + Convert(varchar(20), @dif) + ' where FK_TRXNO_faDMCMPayer = ' + Convert(varchar(20), @FK_TRXNO_CM) + ' and FK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CR) + '
					update faCRMstr set otheramount = otheramount - ' + Convert(varchar(20), @dif) + ', appliedamount = appliedamount - ' + Convert(varchar(20), @dif) + ' where PK_TRXNO = ' + Convert(varchar(20), @FK_TRXNO_CR)
				End
				set @dif = 0
			End

			print @sql
			Fetch next from b into @PK_faArledgers, @credit, @FK_TRXNO_CM, @FK_TRXNO_CR
			End
		close b 
		deallocate b

		Fetch next from a into @FK_TRXNO, @dif
	End

close a
deallocate a